[spectral_density_calc_A]
type: logical
doc: Whether or not to calculate absorptive spectral_density
interface: ezfio, provider
default: True

[spectral_density_calc_R]
type: logical
doc: Whether or not to calculate emissive spectral_density
interface: ezfio, provider
default: True

[spectral_density_orbital_coupling]
type: logical
doc: Whether or not to perform a calculation using explicitly coupled excitations between orbitals
interface: ezfio, provider
default: False

[dump_intermediate_output]
type: logical
doc: Whether or not to dump intermediate outputs per orbital/number of determinants
interface: ezfio, provider
default: True

[write_greens_f]
type: logical
doc: Whether or not to write out calculated greens functions
interface: ezfio, provider
default: False

[write_lanczos_ab]
type: logical
doc: Whether or not to also write out Lanczos alpha/beta vectors
interface: ezfio, provider
default: False

[max_row_sze_factor]
type: integer
doc: Factor to which to multiply nnz_max_per_row for dynamic sparse arrays
interface: ezfio, provider
default: 1000

[greens_omega_N]
type: integer
doc: number of entries in greens function spectrum
interface: ezfio

[greens_omega_resolution]
type: double precision
doc: energy resolution of calculated greens function, in Hartree
interface: ezfio, provider
default: 0.001

[greens_omega_min]
type: double precision
doc: minimum absolute omega to calculate, in Hartree
interface: ezfio, provider
default: 0.0

[greens_omega_max]
type: double precision
doc: maximum absolute omega to calculate, in Hartree
interface: ezfio, provider
default: 5.0

[greens_epsilon]
type: double precision
doc: limit factor for greens function
interface: ezfio, provider
default: 0.001

[lanczos_N]
type: integer
doc: number of entries in lanczos vector
interface: ezfio, provider
default: 100

[n_iorb_A]
type: integer
doc: number of particle orbitals
interface: ezfio, provider
default: 1

[n_iorb_R]
type: integer
doc: number of hole orbitals
interface: ezfio, provider
default: 1

[iorb_A]
type: integer
doc: indices of particle orbitals
interface: ezfio, provider
size: (spectral_density.n_iorb_A)

[iorb_R]
type: integer
doc: indices of particle orbitals
interface: ezfio, provider
size: (spectral_density.n_iorb_R)

[ns_dets]
type: integer
doc: Number of number of determinants to check
interface: ezfio, provider
default: 1

[n_det_sequence]
type: integer
doc: Numbers of determinants to use as subspaces for Hamiltonian tridiagonalization
interface: ezfio, provider
size: (spectral_density.ns_dets)

[lanczos_alpha_A]
type: double precision
doc: Extracted alpha values from Lanczos tridiagonalization for Greens A
size: (spectral_density.lanczos_N, spectral_density.n_iorb_A, spectral_density.ns_dets)
interface: ezfio

[lanczos_beta_A]
type: double precision
doc: Extracted (squared) beta values from Lanczos tridiagonalization for Greens A
size: (spectral_density.lanczos_N, spectral_density.n_iorb_A, spectral_density.ns_dets)
interface: ezfio

[lanczos_alpha_R]
type: double precision
doc: Extracted alpha values from Lanczos tridiagonalization for Greens R
size: (spectral_density.lanczos_N, spectral_density.n_iorb_R, spectral_density.ns_dets)
interface: ezfio

[lanczos_beta_R]
type: double precision
doc: Extracted (squared) beta values from Lanczos tridiagonalization for Greens R
size: (spectral_density.lanczos_N, spectral_density.n_iorb_R, spectral_density.ns_dets)
interface: ezfio

[lanczos_alpha_A_complex]
type: double precision
doc: Extracted alpha values from Lanczos tridiagonalization for complex Greens A
size: (spectral_density.lanczos_N, spectral_density.n_iorb_A, spectral_density.ns_dets)
interface: ezfio

[lanczos_beta_A_complex]
type: double precision
doc: Extracted (squared) beta values from Lanczos tridiagonalization for complex Greens A
size: (spectral_density.lanczos_N, spectral_density.n_iorb_A, spectral_density.ns_dets)
interface: ezfio

[lanczos_alpha_R_complex]
type: double precision
doc: Extracted alpha values from Lanczos tridiagonalization for complex Greens R
size: (spectral_density.lanczos_N, spectral_density.n_iorb_R, spectral_density.ns_dets)
interface: ezfio

[lanczos_beta_R_complex]
type: double precision
doc: Extracted (squared) beta values from Lanczos tridiagonalization for complex Greens R
size: (spectral_density.lanczos_N, spectral_density.n_iorb_R, spectral_density.ns_dets)
interface: ezfio

[greens_A]
type: double precision
doc: Greens function for added electron in real-space calculations
size: (2, spectral_density.greens_omega_N, spectral_density.n_iorb_A, spectral_density.ns_dets)
interface: ezfio

[greens_R]
type: double precision
doc: Greens function for removed electron in real-space calculations
size: (2, spectral_density.greens_omega_N, spectral_density.n_iorb_R, spectral_density.ns_dets)
interface: ezfio

[greens_A_complex]
type: double precision
doc: Greens function for added electron in periodic calculations
size: (2, spectral_density.greens_omega_N, spectral_density.n_iorb_A, spectral_density.ns_dets)
interface: ezfio

[greens_R_complex]
type: double precision
doc: Greens function for removed electron in periodic calculations
size: (2, spectral_density.greens_omega_N, spectral_density.n_iorb_R, spectral_density.ns_dets)
interface: ezfio

[spectral_density_A]
type: double precision
doc: Spectral density function for added electron in real-space calculations
size: (spectral_density.greens_omega_N, spectral_density.n_iorb_A, spectral_density.ns_dets)
interface: ezfio

[spectral_density_R]
type: double precision
doc: Spectral density function for removed electron in real-space calculations
size: (spectral_density.greens_omega_N, spectral_density.n_iorb_R, spectral_density.ns_dets)
interface: ezfio

[spectral_density_A_complex]
type: double precision
doc: Spectral density function for added electron in periodic calculations
size: (spectral_density.greens_omega_N, spectral_density.n_iorb_A, spectral_density.ns_dets)
interface: ezfio

[spectral_density_R_complex]
type: double precision
doc: Spectral density function for removed electron in periodic calculations
size: (spectral_density.greens_omega_N, spectral_density.n_iorb_R, spectral_density.ns_dets)
interface: ezfio